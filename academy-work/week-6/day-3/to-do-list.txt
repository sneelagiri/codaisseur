TODO: 

1. Create two Git repositories 
2. Create one directory with two sub-directories
  2.1. Client sub-directory
  2.2. Server sub-directory
3. Can start with Server or Client
4. Server:  
  4.1. npm init -y
  4.2. npm install express, pg, sequelize, nodemon, jsonwebtoken, cors, bcrypt
  4.3. Use docker to create a container
  4.4. Connect to database using database client
  4.5. import all dependencies 
  4.6. app.use express body parser, cors
  4.7. import Sequelize, make databaseURL, define db, sync db, export db
  4.8. make directory for each pair of model & router
  4.9. define model & routes
  4.10. use model & routes
4. Client: 
  4.1. npx create-react-app client
  4.2. npm install react-dom react-redux, react-router, react-router-dom, redux, redux-thunk, superagent
  4.3. import dependencies in index.js and change React.DOM.render
  4.4. Delete unnecessary content in App.js (leave app empty)
  4.5. Define components (with containers and functional components)
  4.6. define actions
  4.7. define reducers
  4.8. add components to App.js
  4.9. add routes
  4.10. test


  More possibilities: 
  1. Upload to Heroku using Git
  2. use env.process.PORT & env.process.